# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-20 09:05
from __future__ import unicode_literals

import django.contrib.auth.models
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('b5', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InboxEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(blank=True, max_length=100, verbose_name='Request (other)')),
                ('priority', models.CharField(choices=[('normal', 'normal'), ('low', 'low'), ('urgent', 'urgent')], default='Normal', max_length=30)),
                ('date_in', models.DateField(auto_now=True, verbose_name='Date')),
                ('date_due', models.DateField(verbose_name='Requested date due')),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('reply', models.TextField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(choices=[('Awaiting Action', 'Awaiting Action'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Holding for Response', 'Holding for Response')], default='Awaiting Action', max_length=30)),
                ('completed_on', models.DateField(blank=True, null=True, verbose_name='Date completed')),
                ('attachment', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment2', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment3', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment4', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment5', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment6', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment7', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment8', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment9', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('attachment10', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/uploads', location='/Users/krcnyc/Projects/CCUTTERS/imagetrac_docker/uploads'), upload_to='attachments/')),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='b5.UserProfile')),
                ('assigned_by', models.ForeignKey(default=django.contrib.auth.models.User, on_delete=django.db.models.deletion.CASCADE, to='b5.UserProfile')),
                ('assigned_team', models.ManyToManyField(blank=True, to='b5.Department')),
                ('assigned_to', models.ManyToManyField(blank=True, related_name='name', to='b5.UserProfile')),
            ],
            options={
                'ordering': ['-priority', '-status'],
            },
        ),
        migrations.CreateModel(
            name='InboxRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('subscribers', models.ManyToManyField(blank=True, related_name='member', to='b5.UserProfile')),
            ],
        ),
        migrations.AddField(
            model_name='inboxentry',
            name='box',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskmanager.TaskBox'),
        ),
        migrations.AddField(
            model_name='inboxentry',
            name='request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taskmanager.InboxRequest'),
        ),
    ]
